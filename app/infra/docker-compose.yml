version: '3.8'

services:
  # 数据库服务
  postgres:
    image: bitnami/postgresql:15
    container_name: mini-feeds-postgres
    environment:
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: mini_feeds
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sql/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
      - ./sql/metrics_views.sql:/docker-entrypoint-initdb.d/03-metrics_views.sql
      - ./sql/metrics_seed.sql:/docker-entrypoint-initdb.d/04-metrics_seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis缓存服务
  redis:
    image: redis:alpine
    container_name: mini-feeds-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # 数据库管理工具
  adminer:
    image: adminer
    container_name: mini-feeds-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    restart: unless-stopped

  # SQL管理平台
  sqlpad:
    image: sqlpad/sqlpad:latest
    container_name: mini-feeds-sqlpad
    ports:
      - "3010:3000"
    environment:
      SQLPAD_ADMIN: admin@example.com
      SQLPAD_ADMIN_PASSWORD: admin
      SQLPAD_APP_LOG_LEVEL: info
      SQLPAD_WEB_LOG_LEVEL: warn
      SQLPAD_CONNECTIONS__pgdemo__name: PostgreSQL
      SQLPAD_CONNECTIONS__pgdemo__driver: postgres
      SQLPAD_CONNECTIONS__pgdemo__host: postgres
      SQLPAD_CONNECTIONS__pgdemo__database: mini_feeds
      SQLPAD_CONNECTIONS__pgdemo__username: postgres
      SQLPAD_CONNECTIONS__pgdemo__password: postgres
      SQLPAD_CONNECTIONS__pgdemo__multiStatementTransactionEnabled: "true"
      SQLPAD_CONNECTIONS__pgdemo__idleTimeoutSeconds: 86400
    volumes:
      - sqlpad_data:/var/lib/sqlpad
    depends_on:
      - postgres
    restart: unless-stopped

  # 定时任务容器
  cron:
    image: alpine:latest
    container_name: mini-feeds-cron
    depends_on:
      - postgres
    volumes:
      - ./scripts:/scripts
    command: >
      sh -c "apk add --no-cache postgresql-client bash && 
             chmod +x /scripts/refresh_materialized_views.sh && 
             echo '*/5 * * * * /scripts/refresh_materialized_views.sh >> /scripts/refresh.log 2>&1' > /etc/crontabs/root && 
             crond -f -d 8"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  sqlpad_data: